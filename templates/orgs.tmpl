<section class="orgs" data-login="{{login}}">
<h1>Organisations</h1>
<button>Add to an org</button>
<div class="cont"></div>
<ul class="them"></ul>
</section>
<script src="$$BASEURL$$/assets/js/awesomplete.js"></script>
<link rel="stylesheet" href="$$BASEURL$$/assets/css/awesomplete.css">
<script>
(function() {
    var ns = document.querySelector("section.orgs");
    var login = ns.getAttribute("data-login");
    var them = ns.querySelector("ul.them");
    var cont = ns.querySelector("div.cont");
    var addbtn = ns.querySelector("button");

    function fdate(d) { return d.split(" ")[0]; }

    function updateOrgs() {
        API("GET", "getMyOrgs", {login: login}, function(err, orgs) {
            if (err) return flash(err);
            them.innerHTML = "";
            var frag = document.createDocumentFragment();
            orgs.rows.forEach(function(o) {
                var li = document.createElement("li");
                var adel = document.createElement("a");
                adel.href = "#";
                adel.appendChild(document.createTextNode("×"));
                adel.onclick = function(e) {
                    e.preventDefault();
                    API("POST", "removeFromOrg", {login: login, org: o.id}, function(err) {
                        if (err) return flash("Couldn't remove from org", err);
                        updateOrgs();
                    })
                }
                var strong = document.createElement("strong");
                var em = document.createElement("em");
                strong.appendChild(document.createTextNode(o.name));
                var dstr = "(" + fdate(o.joined) + "—";
                em.appendChild(document.createTextNode(dstr));
                if (o.left) {
                    em.appendChild(document.createTextNode(fdate(o.left)));
                } else {
                    var aend = document.createElement("a");
                    aend.href = "#";
                    aend.appendChild(document.createTextNode("date"));
                    em.appendChild(aend);
                    aend.onclick = function(e) {
                        e.preventDefault();
                        API("POST", "leaveOrg", {login: login, org: o.id}, function(err) {
                            if (err) return flash("Couldn't leave org", err);
                            updateOrgs();
                        })
                    }
                }
                em.appendChild(document.createTextNode(")"));
                li.appendChild(strong);
                li.appendChild(adel);
                li.appendChild(em);
                frag.appendChild(li);
            })
            them.appendChild(frag);
        });
    }
    document.addEventListener("DOMContentLoaded", updateOrgs, false);

    addbtn.onclick = function() {
        addbtn.setAttribute("hidden", true);
        cont.innerHTML = "";
        var inp = document.createElement("input");
        inp.placeholder = "Type to search or add org";
        inp.className = "dropdown-input";
        var btn = document.createElement("button");
        btn.className = "dropdown-btn";
        var span = document.createElement("span");
        var frag = document.createDocumentFragment();
        frag.appendChild(inp);
        btn.appendChild(span);
        frag.appendChild(btn);

        API("GET", "getAllOrgs", {}, function(err, allorgs) {
            if (err) return flash(err);
            cont.appendChild(frag);
            var list = [{label:"!",value:"!"}].concat(allorgs.rows.map(function(o) { return {value: o.id, label:o.name}; }));
            var justnames = allorgs.rows.map(function(o) { return o.name.toLowerCase(); });
            var dd = new Awesomplete(inp, {
                list: list,
                maxItems: 4,
                minChars: 1,
                filter: function(text, input) {
                    if (text.value.create) {
                        if (justnames.indexOf(input.toLowerCase()) == -1) {
                            return true;
                        } else {
                            return false;
                        }
                    }
                    return text.label.indexOf(input) != -1;
                },
                data: function(item, input) {
                    if (item.label == "!") {
                        return {label:input + " (add org)", value:{create:1,text:input}};
                    } else {
                        return item;
                    }
                }
            });
            inp.addEventListener("awesomplete-select", function(e) {
                e.preventDefault();
                // hide all this stuff
                addbtn.setAttribute("hidden", false);
                cont.innerHTML = "";

                if (e.text.value.create) {
                    // create this new org and add us to it
                    API("POST", "addOrg", {name: e.text.value.text}, function(err, ret) {
                        if (err) { return flash("Couldn't add " + login + " to org", err); }
                        if (!ret.insert_id) { return flash("Couldn't add " + login + " to org", err); }
                        API("POST", "addToOrg", {login: login, org: ret.insert_id}, function(err) {
                            if (err) { return flash("Couldn't add " + login + " to org", err); }
                            updateOrgs();
                        })
                    })
                } else {
                    // add us to this org
                    API("POST", "addToOrg", {login: login, org: e.text.value}, function(err) {
                        if (err) { return flash("Couldn't add " + login + " to org", err); }
                        updateOrgs();
                    })
                }
            }, false);
            btn.addEventListener("click", function() {
                if (dd.ul.childNodes.length === 0) {
                    dd.minChars = 0;
                    dd.evaluate();
                } else if (dd.ul.hasAttribute('hidden')) {
                    dd.open();
                } else {
                    dd.close();
                }
            });
        });
    }
})();
</script>
<style>
section.orgs .cont {
    display: flex;
    flex-direction: row;
}
section.orgs .dropdown-input {
    border: 1px solid black;
    border-radius: 4px 0 0 4px;
    height: 32px;
    box-sizing: border-box;
    padding: 0.1em 0.3em;
    flex: 1;
}
section.orgs .dropdown-btn {
    vertical-align: top;
    height: 32px;
    border-radius: 0 4px 4px 0;
    border: 1px solid black;
    margin: 0;
    flex: 0;
}

section.orgs .dropdown-btn span {
    display: inline-block;
    width: 0;
    height: 0;
    margin-left: 2px;
    vertical-align: middle;
    border-top: 4px dashed;
    border-top: 4px solid;
    border-right: 4px solid transparent;
    border-left: 4px solid transparent;
}

section.orgs ul.them {
    margin: 0;
    padding: 0;
}
section.orgs ul.them li {
    margin: 0;
    padding: 0;
    list-style: none;
}
section.orgs ul.them em {
    display: block;
}


</style>
